
sent_score_list = []

import nltk
nltk.download('vader_lexicon')
from nltk.sentiment.vader import SentimentIntensityAnalyzer
from nltk import tokenize
nltk.download('punkt')

analyzer = SentimentIntensityAnalyzer()
for paragraph in df["body"]:
      
    
    sentence_list = tokenize.sent_tokenize(paragraph)
    paragraphSentiments = 0.0
    for sentence in sentence_list:
        vs = analyzer.polarity_scores(sentence)
        #print("{:-<69} {}".format(sentence, str(vs["compound"])))
        paragraphSentiments += vs["compound"]
    

    try:
        sent_score = round(paragraphSentiments / len(sentence_list), 3)
        sent_score_list.append(sent_score)
    except:
        sent_score = 0
        sent_score_list.append(sent_score)


title_score_list = []

for title in df["title"]:
    vs = analyzer.polarity_scores(title)
    title_score = vs["compound"]
    title_score_list.append(title_score)
    



df['title sentiment score'] = title_score_list
df['body sentiment score'] = sent_score_list

df['Date'] = pd.to_datetime(df['date'],unit='s')

df['Date'] = df['Date'].dt.strftime('%Y/%m/%d')
df['Date'] = pd.to_datetime(df.Date)


data_load = df[['Date','title sentiment score','body sentiment score','title','body','score']]


